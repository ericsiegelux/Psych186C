function obj_dims = MakeUniformPlayground(x_dim,y_dim,num_obj,obj_size)% Create x and y coordinates for points that are uniformly distributed in a space%% INPUT:%   x_dim    - the width of the playground, in pixels%   y_dim    - the height of the playground, in pixels%   num_obj  - the number of random objects to be generated%   obj_size - if object is not a dot (e.g., square), this contains the%               dimensions. Can be either a single value (square) or two%               values for width and height (x and y). %% OUTPUT:%   obj_dims - if obj_size is provided, a 4xnum_obj array of dimensions for%               each object. Can be passed in whole or in parts to any of %               the Screen(Fill___) functions. Otherwise a 2xnum_obj array %               of x and y coordinates of points.%% MakeUniformPlayground creates an xdim X ydim screen of numobj 2D% geometrical objects (circles, squares and triangles) uniformly% distributed across the screen. This is done by dividing the screen into% 100 equally sized regions and distributing the points randomly within% those regions.% check for inputs and set defaultsif nargin<3    num_obj = 100;endif nargin<2    y_dim = 400;endif nargin<1    x_dim = 800;end% get screen information[width, height]=Screen('WindowSize', 0);% determine number of regions to divide the screen into (9 or 100)if (num_obj/100) >= 1    region_width = x_dim/10;    region_height = y_dim/10;    num_reg = 100;else    warning('Fewer than 100 objects selected; Distribution may be non-uniform');    region_width = x_dim/3;    region_height = y_dim/3;    num_reg = 9;end% Location:y_loc = [];x_loc = [];for i = 1:sqrt(num_reg)    for j = 1:sqrt(num_reg)        x_loc = [x_loc; Randi(region_width,[num_obj/num_reg,1])+(i-1)*region_width];        y_loc = [y_loc; Randi(region_height,[num_obj/num_reg,1])+(j-1)*region_height];    endend% if the objects are not dots, adjust for their size so that the x and y coordinates generated % above correspond to the centers of those objectsif nargin>3	    % determine if shape is square or rectangle:    if length(obj_size) == 1        obj_size_x = obj_size;        obj_size_y = obj_size;    else        obj_size_x = obj_size(1);        obj_size_y = obj_size(2);    end        % create the dim matrix for all objects so that the Screen command	% only needs to be called once	rect = [0 0 obj_size_x obj_size_y];	obj_dims = CenterRectOnPoint(rect,x_loc,y_loc)';else % dots	obj_dims = [x_loc y_loc]';end    